library IEEE;
use IEEE.std_logic_1164.all;
use ieee.numeric_std.all;

entity framediff is
  port(
    --entrÃ©es
    I0, I1 : std_logic_vector(7 downto 0);

    --sorties
    S : out std_logic_vector(7 downto 0);
    );
end entity;

architecture AUT_a of AUT is
  signal A,B,ExtOut,ALUOut,DataOut,MuxOut : std_logic_vector(31 downto 0);
  
Begin
  BR: entity work.BancRegistre(BR_a) port map (CLK => CLK, WE => RegWe, RA => RA, RB => RB, RW => RW, W => W, A => A, B => B); 
  UA: entity work.UAL(UAL_a) port map (OP => OP, A => A, B => MuxOut, S => AluOut, N => Flag);
  EXTENDER: entity work.Extender(Extender_A) generic map (N=>N_Ext) port map (E=>Imm,S=>ExtOut);
  MUX1:  entity work.MUX(MUX_A) generic map (N=>N_Mux) port map (A=>B,B=>ExtOut,COM=>B0_Imm1,S=>MuxOut);
  MUX2:  entity work.MUX(MUX_A) generic map (N=>N_Mux) port map (A=>ALUOut,B=>DataOut,COM=>ALU0_DATA1,S=>S);
  DATA_MEM: entity work.Data_mem(Data_mem_a) port map (CLK=>CLK,WrEn=>WrEn,DataIn=>B,DataOut=>DataOut,Addr=>ALUOut(5 downto 0));
  
  
end architecture;
